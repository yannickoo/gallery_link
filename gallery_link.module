<?php

/**
 * @file
 * Gallery link
 *
 * This module provides a field formatter for displaying images as gallery.
 */

/* We define the version of fancybox here so that it's easy to update. */
define('GALLERY_LINK_FANCYBOX_VERSION', '1.3.4');

/**
 * Implements hook_theme().
 */
function gallery_link_theme() {
  return array(
    'gallery_link' => array(
      'variables' => array('items' => array(), 'link_text' => NULL, 'style' => NULL, 'link_options' => array(), 'fancybox_options' => array()),
    ),
  );
}

/**
 * Implements hook_field_formatter_info().
 */
function gallery_link_field_formatter_info() {
  return array(
    'gallery_link' => array(
      'label' => t('Gallery link'),
      'field types' => array('image'),
      'settings' => array(
        'style' => 'large',
        'link_text' => 'Open gallery',
        'use_default_fancybox_options' => TRUE,
        'fancybox_options' => array(
          'padding' => 10,
          'margin' => 20,
          'opacity' => FALSE,
          'modal' => FALSE,
          'scrolling' => 'auto',
          'width' => 560,
          'height' => 340,
          'autoScale' => TRUE,
          'autoDimensions' => TRUE,
          'centerOnScroll' => FALSE,
          'ajax' => '{}',
          'swf' => "{wmode: 'transparent'}",
          'hideOnOverlayClick' => TRUE,
          'hideOnContentClick' => FALSE,
          'overlayShow' => TRUE,
          'overlayOpacity' => 30,
          'overlayColor' => '#666',
          'titleShow' => TRUE,
          'titlePosition' => 'outside',
          'transitionIn' => 'fade',
          'transitionOut' => 'fade',
          'speedIn' => 300,
          'speedOut' => 300,
          'changeSpeed' => 300,
          'changeFade' => 'fast',
          'easingIn' => 'swing',
          'easingOut' => 'swing',
          'showCloseButton' => TRUE,
          'showNavArrows' => TRUE,
          'enableEscapeButton' => TRUE,
        ),
      ),
    ),
  );
}

/**
 * Implements hook_field_formatter_settings_form().
 */
function gallery_link_field_formatter_settings_form($field, $instance, $view_mode, $form, &$form_state) {
  // This gets the view mode where the settings are stored.
  $display = $instance['display'][$view_mode];
  // This gets the settings.
  $settings = $display['settings'];

  $element = array();

  // Allow to use original image.
  $styles = array('' => t('- None -'));

  // Load all image styles.
  $image_styles = image_styles();
  $styles += drupal_map_assoc(array_keys($image_styles));

  $element['style'] = array(
    '#type' => 'select',
    '#title' => t('Image style'),
    '#description' => t('Select the style of the gallery images'),
    '#default_value' => $settings['style'],
    '#options' => $styles,
  );

  $element['link_text'] = array(
    '#type' => 'textfield',
    '#title' => t('Link text'),
    '#description' => t('This text triggers the gallery on click'),
    '#default_value' => $settings['link_text'],
  );

  $element['fancybox_options'] = array(
    '#type' => 'fieldset',
    '#title' => t('Fancybox options'),
    '#collapsible' => TRUE,
    '#tree' => FALSE,
  );

  $element['fancybox_options']['style'] = array(
    '#type' => 'fieldset',
    '#title' => t('Style'),
    '#collapsed' => TRUE,
    '#collapsible' => TRUE,
  );

  $element['fancybox_options']['animation'] = array(
    '#type' => 'fieldset',
    '#title' => t('Animation'),
    '#collapsed' => TRUE,
    '#collapsible' => TRUE,
  );

  $element['fancybox_options']['behavior'] = array(
    '#type' => 'fieldset',
    '#title' => t('Behavior'),
    '#collapsed' => TRUE,
    '#collapsible' => TRUE,
  );

  $element['fancybox_options']['style']['padding'] = array(
    '#type' => 'textfield',
    '#title' => t('Padding'),
    '#description' => t('Space between FancyBox wrapper and content'),
    '#default_value' => $settings['fancybox_options']['padding'],
    '#size' => 4,
    '#field_suffix' => 'px',
    '#element_validate' => array('element_validate_integer_positive'),
  );

  $element['fancybox_options']['style']['margin'] = array(
    '#type' => 'textfield',
    '#title' => t('Margin'),
    '#description' => t('Space between viewport and FancyBox wrapper'),
    '#default_value' => $settings['fancybox_options']['margin'],
    '#size' => 4,
    '#field_suffix' => 'px',
    '#element_validate' => array('element_validate_integer_positive'),
  );

  $element['fancybox_options']['style']['opacity'] = array(
    '#type' => 'checkbox',
    '#title' => t('Opacity'),
    '#description' => t('When TRUE, transparency of content is changed for elastic transitions'),
    '#default_value' => $settings['fancybox_options']['opacity'],
  );

  $element['fancybox_options']['behavior']['modal'] = array(
    '#type' => 'checkbox',
    '#title' => t('Modal'),
    '#description' => t("When TRUE, 'overlayShow' is set to 'TRUE' and 'hideOnOverlayClick', 'hideOnContentClick', 'enableEscapeButton', 'showCloseButton' are set to 'FALSE'"),
    '#default_value' => $settings['fancybox_options']['modal'],
  );

  $element['fancybox_options']['style']['scrolling'] = array(
    '#type' => 'select',
    '#title' => t('Scrolling'),
    '#description' => t('Set the overflow CSS property to create or hide scrollbars'),
    '#default_value' => $settings['fancybox_options']['scrolling'],
    '#options' => array(
      'auto' => t('Auto'),
      'yes' => t('Yes'),
      'no' => t('No'),
    ),
  );

  $element['fancybox_options']['style']['width'] = array(
    '#type' => 'textfield',
    '#title' => t('Width'),
    '#description' => t("Width for content types 'iframe' and 'swf'. Also set for inline content if 'autoDimensions' is set to 'FALSE'"),
    '#default_value' => $settings['fancybox_options']['width'],
    '#size' => 4,
    '#field_suffix' => 'px',
    '#element_validate' => array('element_validate_integer_positive'),
  );

  $element['fancybox_options']['style']['height'] = array(
    '#type' => 'textfield',
    '#title' => t('Height'),
    '#description' => t("Height for content types 'iframe' and 'swf'. Also set for inline content if 'autoDimensions' is set to 'FALSE'"),
    '#default_value' => $settings['fancybox_options']['height'],
    '#size' => 4,
    '#field_suffix' => 'px',
    '#element_validate' => array('element_validate_integer_positive'),
  );

  $element['fancybox_options']['behavior']['autoScale'] = array(
    '#type' => 'checkbox',
    '#title' => t('Auto scale'),
    '#description' => t('If TRUE, FancyBox is scaled to fit in viewport'),
    '#default_value' => $settings['fancybox_options']['autoScale'],
  );

  $element['fancybox_options']['style']['autoDimensions'] = array(
    '#type' => 'checkbox',
    '#title' => t('Auto dimensions'),
    '#description' => t('For inline and ajax views, resizes the view to the element recieves. Make sure it has dimensions otherwise this will give unexpected results'),
    '#default_value' => $settings['fancybox_options']['autoDimensions'],
  );

  $element['fancybox_options']['behavior']['centerOnScroll'] = array(
    '#type' => 'checkbox',
    '#title' => t('Center on scroll'),
    '#description' => t('When TRUE, FancyBox is centered while scrolling page'),
    '#default_value' => $settings['fancybox_options']['centerOnScroll'],
  );

  $element['fancybox_options']['behavior']['hideOnOverlayClick'] = array(
    '#type' => 'checkbox',
    '#title' => t('Hide on overlay click'),
    '#description' => t('Toggle if clicking the overlay should close FancyBox'),
    '#default_value' => $settings['fancybox_options']['hideOnOverlayClick'],
  );

  $element['fancybox_options']['behavior']['hideOnContentClick'] = array(
    '#type' => 'checkbox',
    '#title' => t('Hide on content click'),
    '#description' => t('Toggle if clicking the content should close FancyBox'),
    '#default_value' => $settings['fancybox_options']['hideOnContentClick'],
  );

  $element['fancybox_options']['style']['overlayShow'] = array(
    '#type' => 'checkbox',
    '#title' => t('Show overlay'),
    '#description' => t('Toggle overlay'),
    '#default_value' => $settings['fancybox_options']['overlayShow'],
  );

  $element['fancybox_options']['style']['overlayOpacity'] = array(
    '#type' => 'select',
    '#title' => t('Overlay opacity'),
    '#description' => t('Opacity of the overlay'),
    '#default_value' => $settings['fancybox_options']['overlayOpacity'],
    '#options' => drupal_map_assoc(array(0, 10, 20, 30, 40, 50, 60, 70, 80, 90, 100)),
    '#field_suffix' => '%',
    '#element_validate' => array('_gallery_link_fix_opacity'),
  );

  $element['fancybox_options']['style']['overlayColor'] = array(
    '#type' => (!module_exists('jquery_colorpicker')) ? 'textfield' : 'jquery_colorpicker',
    '#title' => t('Overlay color'),
    '#description' => t('Color of the overlay'),
    '#default_value' => $settings['fancybox_options']['overlayColor'],
  );

  $element['fancybox_options']['style']['titleShow'] = array(
    '#type' => 'checkbox',
    '#title' => t('Show title'),
    '#description' => t('Toggle title'),
    '#default_value' => $settings['fancybox_options']['overlayShow'],
  );

  $element['fancybox_options']['style']['titlePosition'] = array(
    '#type' => 'select',
    '#title' => t('Title position'),
    '#description' => t("The position of title. Can be set to 'outside', 'inside' or 'over'"),
    '#default_value' => $settings['fancybox_options']['titlePosition'],
    '#options' => drupal_map_assoc(array('outside', 'inside', 'over')),
  );

  $element['fancybox_options']['animation']['transitionIn'] = array(
    '#type' => 'select',
    '#title' => t('Transition in'),
    '#description' => t("The transition type. Can be set to 'elastic', 'fade' or 'none'"),
    '#default_value' => $settings['fancybox_options']['transitionIn'],
    '#options' => drupal_map_assoc(array('elastic', 'fade', 'none')),
  );

  $element['fancybox_options']['animation']['transitionOut'] = array(
    '#type' => 'select',
    '#title' => t('Transition out'),
    '#description' => t("The transition type. Can be set to 'elastic', 'fade' or 'none'"),
    '#default_value' => $settings['fancybox_options']['transitionOut'],
    '#options' => drupal_map_assoc(array('elastic', 'fade', 'none')),
  );

  $element['fancybox_options']['animation']['speedIn'] = array(
    '#type' => 'textfield',
    '#title' => t('Speed in'),
    '#description' => t('Speed of the fade and elastic transitions, in milliseconds'),
    '#default_value' => $settings['fancybox_options']['speedIn'],
    '#size' => 4,
    '#field_suffix' => 'ms',
    '#element_validate' => array('element_validate_integer_positive'),
  );

  $element['fancybox_options']['animation']['speedOut'] = array(
    '#type' => 'textfield',
    '#title' => t('Speed out'),
    '#description' => t('Speed of the fade and elastic transitions, in milliseconds'),
    '#default_value' => $settings['fancybox_options']['speedOut'],
    '#size' => 4,
    '#field_suffix' => 'ms',
    '#element_validate' => array('element_validate_integer_positive'),
  );

  $element['fancybox_options']['animation']['changeSpeed'] = array(
    '#type' => 'textfield',
    '#title' => t('Speed out'),
    '#description' => t('Speed of the fade and elastic transitions, in milliseconds'),
    '#default_value' => $settings['fancybox_options']['changeSpeed'],
    '#size' => 4,
    '#field_suffix' => 'ms',
    '#element_validate' => array('element_validate_integer_positive'),
  );

  $element['fancybox_options']['animation']['changeFade'] = array(
    '#type' => 'select',
    '#title' => t('Transition in'),
    '#description' => t('Speed of the content fading while changing gallery items'),
    '#default_value' => $settings['fancybox_options']['changeFade'],
    '#options' => drupal_map_assoc(array('elastic', 'fade', 'none')),
  );

  $element['fancybox_options']['animation']['easingIn'] = array(
    '#type' => 'select',
    '#title' => t('Easing in'),
    '#description' => t('Easing used for elastic animations'),
    '#default_value' => $settings['fancybox_options']['easingIn'],
    '#options' => drupal_map_assoc(array(
      'swing',
      'easeIn',
      'easeOut',
      'easeInOut',
      'expoin',
      'expoout',
      'expoinout',
      'bouncein',
      'bounceout',
      'bounceinout',
      'elasin',
      'elasout',
      'elasinout',
      'backin',
      'backout',
      'backinout',
    )),
  );

  $element['fancybox_options']['animation']['easingOut'] = array(
    '#type' => 'select',
    '#title' => t('Easing out'),
    '#description' => t('Easing used for elastic animations'),
    '#default_value' => $settings['fancybox_options']['easingOut'],
    '#options' => drupal_map_assoc(array(
      'swing',
      'easeIn',
      'easeOut',
      'easeInOut',
      'expoin',
      'expoout',
      'expoinout',
      'bouncein',
      'bounceout',
      'bounceinout',
      'elasin',
      'elasout',
      'elasinout',
      'backin',
      'backout',
      'backinout',
    )),
  );

  $element['fancybox_options']['style']['showCloseButton'] = array(
    '#type' => 'checkbox',
    '#title' => t('Show close button'),
    '#description' => t('Toggle close button'),
    '#default_value' => $settings['fancybox_options']['showCloseButton'],
  );

  $element['fancybox_options']['style']['showNavArrows'] = array(
    '#type' => 'checkbox',
    '#title' => t('Show navigation arrows'),
    '#description' => t('Toggle navigation arrows'),
    '#default_value' => $settings['fancybox_options']['showNavArrows'],
  );

  $element['fancybox_options']['style']['enableEscapeButton'] = array(
    '#type' => 'checkbox',
    '#title' => t('Enable escape button'),
    '#description' => t('Toggle if pressing Esc button closes FancyBox'),
    '#default_value' => $settings['fancybox_options']['enableEscapeButton'],
  );

  return $element;
}

/**
 * Implements hook_field_formatter_settings_summary().
 */
function gallery_link_field_formatter_settings_summary($field, $instance, $view_mode) {
  $display = $instance['display'][$view_mode];
  $settings = $display['settings'];
  $summary = t('Place a gallery link with %style images and the trigger text is "%link_text".', array(
    '%style' => $settings['style'],
    '%link_text' => $settings['link_text'],
      ));
  return $summary;
}

/**
 * Implements hook_field_formatter_view().
 */
function gallery_link_field_formatter_view($entity_type, $entity, $field, $instance, $langcode, $items, $display) {
  $element = array();
  // We store all settings in a variable.
  $settings = $display['settings'];
  // We also store the settings directly in a variable.
  $style = $settings['style'];
  $link_text = $settings['link_text'];
  $fancybox_options = $settings['fancybox_options'];

  $variables = array(
    'items' => $items,
    'link_text' => $link_text,
    'style' => $style,
    'fancybox_options' => $fancybox_options,
  );

  $element[0]['#markup'] = theme('gallery_link', $variables);

  return $element;
}

/**
 * Returns a link which triggers a gallery
 *
 * @param array $variables
 *   An array which contains the field values.
 *
 *   link_text (string)
 *     This is the text of the trigger link
 *   style (string)
 *     The images will be display with this image style
 *   link_options (array)
 *     (optional) Here can you pass an array which is structured like the
 *     options from the l() function
 *   fancybox_options (array)
 *     (optional) Here you can pass an array which defines the fancybox options
 *     (http://fancybox.net/api)
 *
 * @return string
 *   A link which triggers the gallery on click
 */
function theme_gallery_link($variables) {
  // Getting all variables.
  $items = $variables['items'];
  $link_text = $variables['link_text'];
  $style = $variables['style'];
  $link_options = $variables['link_options'];
  $fancybox_options = $variables['fancybox_options'];

  // We count so that we can support multiple galleries.
  static $counter = 0;
  $data = array();
  $data['images'] = array();
  $output = '';

  foreach ($items as $delta => $item) {
    $data['images'][$delta]['href'] = ($style != '') ? image_style_url($style, $item['uri']) : file_create_url($item['uri']);

    // Store the image title.
    if (!empty($item['title'])) {
      $data['images'][$delta]['title'] = check_plain($item['title']);
    }
  }

  if (isset($fancybox_options) && $fancybox_options) {
    $data['options'] = $fancybox_options;
  }

  // We add needed files for fancybox and our custom javascript file.
  drupal_add_css(libraries_get_path('fancybox') . '/jquery.fancybox-' . GALLERY_LINK_FANCYBOX_VERSION . '.css');
  drupal_add_css(drupal_get_path('module', 'gallery_link') . '/gallery_link.css');
  drupal_add_js(libraries_get_path('fancybox') . '/jquery.fancybox-' . GALLERY_LINK_FANCYBOX_VERSION . '.pack.js');
  drupal_add_js(drupal_get_path('module', 'gallery_link') . '/gallery_link.js');

  // We put the $data array into the Drupal.settings.gallery_link.
  drupal_add_js(array('gallery_link' => array($data)), 'setting');

  // We add a an attribute which stores the gallery id ($counter).
  $link_options['attributes']['data-gallery-id'] = $counter;

  // Use default link text when no $link_text was set.
  $link_text = ($link_text) ? $link_text : t('Open gallery');
  // Now we print the link with given $link_text and all given $options.
  $output .= l($link_text, '', $link_options);

  $counter++;

  return $output;
}

function _gallery_link_fix_opacity(&$element, &$form_state) {
  $value = $element['#value'];
  // The field value is e.g. 10 so we have to divide it to get 0.1.
  $element['#value'] = $value / 100;
}
